<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--绑定一个固定的Mapper接口-->
<mapper namespace="com.xjtlu.cpt202.cpt202Project.mapper.BlogMapper">

    <!--查询语句-->
    <!--    parameterType 参数类-->
    <!--    resultType  返回类-->

    <!--    void thumbUpOne(int a_key);-->
    <!--    获取点赞数-->
    <select id="thumbUpOne" parameterType="int" resultType="int">
        select num_like from CPT202.Blog where id = #{a_key};
    </select>

    <!--    void add_fav(int user_id, int blog_id);-->
    <!--    添加user_fav关系表记录-->
    <insert id="add_fav" parameterType="java.lang.Integer">
        insert into CPT202.user_fav (user_id, blog_id)
        values (#{user_id}, #{blog_id});
    </insert>

    <!--    void update_blog_fav(int blog_id);-->
    <!--    blog内收藏记录加1-->
    <update id="update_blog_fav" parameterType="java.lang.Integer">
        update CPT202.blog set num_favorite = num_favorite + 1 where id = #{blog_id};
    </update>

    <!--    int insertBlog(Blog blog);-->
    <!--    blog information is inserted into the database and get a blog_id-->
    <insert id="insertBlog" parameterType="com.xjtlu.cpt202.cpt202Project.entity.Blog">
        insert into CPT202.blog(author_id,title, description, content,post_time, num_like,num_view)
        values(#{author_id},#{title},#{description},#{content},#{post_time},#{num_like},#{num_view})
    </insert>

    <!--    int deleteBlog(int blog_id);-->
    <!--    delete blog in database-->
    <delete id="deleteBlog" >
        delete from CPT202.blog where id = #{blog_id}
    </delete>

    <!--    Blog selectBlogById(int blog_id);-->
    <!--    get blog information from database according to blog_id-->
    <select id="selectBlogById" resultType="com.xjtlu.cpt202.cpt202Project.entity.Blog">
        select *
        from CPT202.blog
        where id = #{id}
    </select>

    <!--    List<Blog> selectBlogs(int limit);-->
    <!--    get blog list from database according to limit amount-->
    <select id="selectBlogs" resultType="com.xjtlu.cpt202.cpt202Project.entity.Blog">
        select *
        from ( select * from CPT202.blog b order by post_time desc limit #{limit} ) as temp
        order by post_time
    </select>

    <!--    List<Blog> selectBlogByKeywords(String keyword);-->
    <!--    get blog list from database according to keyword-->
    <select id="selectBlogByKeywords" resultType="com.xjtlu.cpt202.cpt202Project.entity.Blog">
        select *
        from CPT202.blog
        <where>
            <if test="keyword != null">
                and title regexp #{keyword}
            </if>
        </where>
        order by CPT202.blog.post_time desc
    </select>

</mapper>

