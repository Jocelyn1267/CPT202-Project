<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--绑定一个固定的Mapper接口-->
<mapper namespace="com.xjtlu.cpt202.cpt202Project.mapper.UserMapper">

    <!--查询语句-->
    <!--    parameterType 参数类-->
    <!--    resultType  返回类-->

    <!--    数据库未知 暂用mysql.User-->


    <!--    List<User> getUserList();-->
    <!--    获取所有用户-->
    <select id="getUserList" resultType="com.xjtlu.cpt202.cpt202Project.entity.User">
        select * from CPT202.user;
    </select>


<!--    List<Integer> getUserIdList();-->
    <!--    获取所有用户id列表-->
    <select id="getUserIdList" resultType="java.lang.Integer">
        select id from CPT202.user;
    </select>


    <!--    User findById(int userId);-->
    <!--    按照userid查找用户-->
    <select id="findUserById" parameterType="java.lang.Integer" resultType="com.xjtlu.cpt202.cpt202Project.entity.User">
        select * from CPT202.user where id = #{id};
    </select>

    <!--    Object getUserId(String username);-->
    <select id="getUserId" resultType="java.lang.Object">
        select u.id from CPT202.user u where username = #{username};
    </select>

    <!--    int addUser(User u);-->
    <!--    在数据库增加新用户-->
    <insert id="addUser"  parameterType="com.xjtlu.cpt202.cpt202Project.entity.User">
        insert into CPT202.user (id, username, password, email, gender,
                                 grade, major, like_blog, comment_num, fav_blog, num_fan)
        values (#{id}, #{username}, #{password}, #{email}, #{gender},
                #{grade}, #{major}, 0, 0, 0, 0);
    </insert>

    <!--    void updateUser(User u)-->
    <!--    更新用户信息-->
    <update id="updateUser" parameterType="com.xjtlu.cpt202.cpt202Project.entity.User">
        update CPT202.user set username=#{username}, password=#{password}, email=#{email},
        gender=#{gender}, grade=#{grade}, major=#{major}, like_blog=#{like_blog}, comment_num=#{comment_num}, fav_blog=#{fav_blog}, num_fan=#{num_fan}
        where id = #{id};
    </update>


    <!--    int deleteUser(User u);-->
    <!--    在数据库删除用户-->
    <delete id="deleteUser" parameterType="com.xjtlu.cpt202.cpt202Project.entity.User">
        delete from CPT202.user where id = #{id};
    </delete>


    <!--List<Integer> getCreateId(int id);-->
    <!--获取用户创作的文章id-->
    <select id="getCreateId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select id from CPT202.blog where author_id = #{id};
    </select>


<!--点赞-->

    <!--List<Integer> getThumbUpId(int id);-->
    <!--获取用户点赞过的文章id-->
    <select id="getThumbUpId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select blog_id from CPT202.user_like where user_id = #{id};
    </select>

    <!--    int addLike(int user_id, int blog_id);-->
    <!--    增加点赞记录-->
    <insert id="addLike" parameterType="java.lang.Integer">
        insert into CPT202.user_like (user_id, blog_id)
        values ( #{user_id}, #{blog_id});
    </insert>


    <!--    int cancelLike(int user_id, int blog_id);-->
    <!--    在数据库删除用户-->
    <delete id="cancelLike" parameterType="java.lang.Integer">
        delete from CPT202.user_like where user_id = #{user_id} and blog_id = #{blog_id};
    </delete>


    <select id="getThumbNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select num_like from CPT202.blog where id = #{blog_id};
    </select>


    <!--    int addLikeNum(int blog_id);-->
    <!--    增加文章的点赞数量-->
    <update id="addLikeNum" parameterType="java.lang.Integer">
        update CPT202.blog set num_like = num_like + 1 where id = #{blog_id};
    </update>

    <!--    int reduceLikeNum(int blog_id);-->
    <!--    减少文章的点赞数量-->
    <update id="reduceLikeNum" parameterType="java.lang.Integer">
        update CPT202.blog set num_like = num_like - 1 where id = #{blog_id};
    </update>

<!--/点赞-->

<!--收藏-->

    <!--    int addCollect(int user_id, int blog_id);-->
    <!--    增加收藏记录-->
    <insert id="addCollect" parameterType="java.lang.Integer">
        insert into CPT202.user_fav (user_id, blog_id)
        values ( #{user_id}, #{blog_id});
    </insert>


    <!--    int cancelCollect(int user_id, int blog_id);-->
    <!--    删除收藏记录-->
    <delete id="cancelCollect" parameterType="java.lang.Integer">
        delete from CPT202.user_fav where user_id = #{user_id} and blog_id = #{blog_id};
    </delete>


    <!--    Integer getCollectNum(int blog_id);-->
    <!--    获取收藏数量-->
    <select id="getCollectNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select num_fav from CPT202.blog where id = #{blog_id};
    </select>

    <!--    int addCollectNum(int blog_id);-->
    <!--    增加文章的收藏数量-->
    <update id="addCollectNum" parameterType="java.lang.Integer">
        update CPT202.blog set num_fav = num_fav + 1 where id = #{blog_id};
    </update>

    <!--    int reduceCollectNum(int blog_id);-->
    <!--    减少文章的收藏数量-->
    <update id="reduceCollectNum" parameterType="java.lang.Integer">
        update CPT202.blog set num_fav = num_fav - 1 where id = #{blog_id};
    </update>

    <!--List<Integer> getCollectId(int id);-->
    <!--获取用户收藏的文章id-->
    <select id="getCollectId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select blog_id from CPT202.user_fav where user_id = #{id};
    </select>

<!--/收藏-->

</mapper>